admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 9902 }

static_resources:
  listeners:
    - name: listener
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9903
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                codec_type: AUTO
                stat_prefix: ingress_http
                upgrade_configs:
                  - upgrade_type: websocket
                route_config:
                  virtual_hosts:
                    - name: collections_services
                      domains: ["*"]
                      # typed_per_filter_config:
                      #   envoy.filters.http.ext_authz:
                      #     "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                      #     check_settings:
                      #       context_extensions:
                      #         virtual_host: collections_services
                      routes:
                        - match:
                            safe_regex:
                              google_re2: {}
                              regex: ^\/auth\/v1\/invitations\/.*\/check
                          route:
                            cluster: svc-authorization
                            regex_rewrite:
                              pattern:
                                google_re2: {}
                                regex: ^\/auth\/v1\/(.*)
                              substitution: /api/v1/\1
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            prefix: "/auth/v1"
                          route:
                            cluster: svc-authorization
                            regex_rewrite:
                              pattern:
                                google_re2: {}
                                regex: ^\/auth\/v1\/(.*)
                              substitution: /api/v1/\1
                        - match:
                            prefix: "/auth/docs"
                          route:
                            cluster: svc-authorization
                            prefix_rewrite: "/api/v1/docs/index.html"
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                        - match:
                            safe_regex:
                              google_re2:
                                max_program_size: 200
                              regex: ^\/auth\/(swagger-ui-bundle.js|swagger-ui.css|swagger-ui-standalone-preset.js|favicon-16x16.png|doc.json)
                          route:
                            cluster: svc-authorization
                            regex_rewrite:
                              pattern:
                                google_re2:
                                  max_program_size: 200
                                regex: ^\/auth\/(swagger-ui-bundle.js|swagger-ui.css|swagger-ui-standalone-preset.js|favicon-16x16.png|doc.json)
                              substitution: /api/v1/docs/\1
                          typed_per_filter_config:
                            envoy.filters.http.ext_authz:
                              "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthzPerRoute
                              disabled: true
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        authenticate-service:
                          issuer: https://accounts.google.com
                          payload_in_metadata: "jwt_payload"
                          # audiences:
                          #   - 480990274560-jkgrdoit5nuk7shg11lbqt223akfqgr3.apps.googleusercontent.com
                          remote_jwks:
                            http_uri:
                              uri: https://www.googleapis.com/oauth2/v3/certs
                              cluster: google-oauth2
                              timeout: 1s
                            cache_duration:
                              seconds: 300
                            async_fetch:
                              fast_listener: true
                            retry_policy:
                              retry_back_off:
                                base_interval: 0.01s
                                max_interval: 20s
                              num_retries: 10
                      rules:
                        - match:
                            safe_regex:
                              google_re2: {}
                              regex: ^\/auth\/v1\/invitations\/.*\/check
                        - match:
                            prefix: /auth/v1
                          requires:
                            provider_name: authenticate-service
                  - name: envoy.filters.http.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local meta = request_handle:streamInfo():dynamicMetadata()
                          for key, value in pairs(meta) do
                            request_handle:headers():replace("user-id", value.jwt_payload.sub)
                          end
                        end
                      ## we should update from inline_code to defaul_source_code.inline_string
                      ## because inline_code field gonna be deprecated in envoy v1.23
                      ## (currently we still use v1.20)
                      # default_source_code:
                      #   inline_string: |
                      #     function envoy_on_request(request_handle)
                      #       local meta = request_handle:streamInfo():dynamicMetadata()
                      #       for key, value in pairs(meta) do
                      #         request_handle:headers():replace("user-id", value.jwt_payload.sub)
                      #       end
                      #     end
                  - name: envoy.filters.http.ext_authz
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                      transport_api_version: V3
                      grpc_service:
                        envoy_grpc:
                          cluster_name: ext-authz
                        timeout: 1s
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: google-oauth2
      connect_timeout: 2s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: google-oauth2
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: oauth2.googleapis.com
                      port_value: 443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: oauth2.googleapis.com
    - name: svc-authorization
      type: STRICT_DNS
      connect_timeout: 5s
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: svc-authorization
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8888
    - name: ext-authz
      type: LOGICAL_DNS
      connect_timeout: 5s
      typed_extension_protocol_options:
        envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
          "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
          explicit_http_config:
            http2_protocol_options: {}
      load_assignment:
        cluster_name: ext-authz
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 8889

layered_runtime:
  layers:
    - name: static_layer
      static_layer:
        envoy:
          resource_limits:
            listener:
              listener:
                connection_limit: 10000
        overload:
          global_downstream_max_connections: 50000
